local Protocol = {};

-- 表示数值可以用16或10进制(最小值，最大值)
Protocol.Attr = 
{
	-- 协议的显示名称,不能超过16字符，目前暂不支持中文
	Name = "SONY",	
		
	-- 指明是云台协议还是矩阵协议，使用"PTZ", "MATRIX"表示
	Type = "PTZ",
	
	-- 以ms为单位
	Internal = 200,
				
	-- 没有对应的地址范围，请都设成0xff
	-- 云台地址范围
	CamAddrRange 		= {0x01, 0x07}, 
	-- 监视地址范围
	MonAddrRange		= {0x00, 0xFF},	
	-- 预置点范围
	PresetRange 		= {0x00, 0xff},
	-- 自动巡航线路范围
	TourRange			= {0x01, 0xff},
	-- 轨迹线路范围
	PatternRange		= {0x01, 0xff},
	-- 垂直速度范围
	TileSpeedRange 		= {0x01, 0x14},
	-- 水平速度范围
	PanSpeedRange 		= {0x01, 0x18},
	-- 自动扫描范围
	ScanRange 			= {0x01, 0xff},
	
	-- 辅助范围
	AuxRange 			= {0x01, 0x08},
}

Protocol.CommandAttr =
{
	-- 协议中需要更改的位置，用LUA下标表示，即下标从１开始,用10进制表示
	AddrPos 			= 1, 
	--PresetPos 		= 6, 
	TileSpeedPos 	= 6,
	PanSpeedPos 	= 5,
	--AuxPos 				= 6,
}

Protocol.Command = 
{
	-- 写具体协议时只能用16进制或字符表示,没有的话就注释掉
	Start= 
	{
		--写上下左右, 左上，左下，右上，右下
		TileUp 		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x01, 0xFF,",
		TileDown 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x02, 0xFF,",
		PanLeft 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x01, 0x03, 0xFF,", 
		PanRight 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x02, 0x03, 0xFF,",
		LeftUp 		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x01, 0x01, 0xFF,",
		LeftDown 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x01, 0x02, 0xFF,",
		RightUp		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x02, 0x01, 0xFF,",
		RightDown       = "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x02, 0x02, 0xFF,",

		ZoomWide 	= "0x00, 0x01, 0x04, 0x07, 0x03, 0xFF,",
		ZoomTele 	= "0x00, 0x01, 0x04, 0x07, 0x02, 0xFF,",
		FocusNear       = "0x00, 0x01, 0x04, 0x08, 0x03, 0xFF,",
		FocusFar 	= "0x00, 0x01, 0x04, 0x08, 0x02, 0xFF,",
		IrisSmall       = "0x00, 0x01, 0x04, 0x0b, 0x03, 0xFF,",
		IrisLarge       = "0x00, 0x01, 0x04, 0x0b, 0x02, 0xFF,",
		--AlarmSearch 		= "0xff, 0x01, 0x00, 0x07, 0x00, 0x21, 0x00",
			
		-- 灯光
		LightOn		= "0x00, 0x01, 0x04, 0x33, 0x02, 0xFF,",
		LightOff        = "0x00, 0x01, 0x04, 0x33, 0x03, 0xFF,",
			
		-- 预置点操作（设置，清除，转置)
		--[[
		SetPreset 	= "0xff, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00",
		ClearPreset	= "0xff, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00",
		GoToPreset 	= "0xff, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00",			
		--]]	
		-- 水平旋转，
		--[[
		AutoPanOn		= "0xff, 0x01, 0x00, 0x1B, 0x00, 0x00, 0x00",
		AutoPanOff	= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		--]]
			
		-- 自动扫描，在预先设置的边界中间转动
		--[[
		SetLeftLimit 	= "0xff, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00",
		SetRightLimit	= "0xff, 0x01, 0x00, 0x13, 0x00, 0x00, 0x00", 
		AutoScanOn 		= "0xff, 0x01, 0x98, 0x00, 0x00, 0x00, 0x00,",
		-- AutoScanOff	="";
		--]]
			
		-- 自动巡航，一般指在预置点之间巡航
                --[[
		AddTour 	= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		DeleteTour 	= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		StartTour 	= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		StopTour 		= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		ClearTour		= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
                --]]
			
		-- 轨迹巡航, 一般指模式(设置开始，设置结束，运行，停止，清除模式
		--[[
		SetPatternStart = "0xff, 0x01, 0x00, 0x1f, 0x00, 0x00, 0x00",
		SetPatternStop 	= "0xff, 0x01, 0x00, 0x21, 0x00, 0x00, 0x00",
		StartPattern 		= "0xff, 0x01, 0x00, 0x23, 0x00, 0x00, 0x00",
		StopPattern			= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		ClearPattern 		= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		--]]
		--[[
		AuxOn 	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		AuxOff 	= "0xff, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00",
		--]]	
		-- 菜单相关操作
		--[[
		Menu = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuExit = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuEnter = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuEsc = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuUp = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuDown = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuLeft = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		MenuRight = "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		
		-- 对于特殊的命令，可以自己定义特定信息，利用这个特定信息来处理
		Position = "0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,0x00, 0xff",	
		--]]
		
		-- 直观辅助开关操作
		--[[
		-- 镜头电源
		CamPowerOn	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		CamPowerOff	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		
		-- 雨刷
		WiperOn 	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		WiperOff 	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		
		-- 红外灯(普通灯)
		NightSeeOn	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		NightSeeOff	= "0xff, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00",
		--]]

	},
	Stop = 
	{
		TileUp 		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		TileDown 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		PanLeft 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		PanRight 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		LeftUp 		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		LeftDown 	= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		RightUp		= "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		RightDown       = "0x00, 0x01, 0x06, 0x01, 0x00, 0x00, 0x03, 0x03, 0xFF,",
		
		ZoomWide 	= "0x00, 0x01, 0x04, 0x07, 0x00, 0xFF,",
		ZoomTele 	= "0x00, 0x01, 0x04, 0x07, 0x00, 0xFF,",
		FocusNear       = "0x00, 0x01, 0x04, 0x08, 0x00, 0xFF,",
		FocusFar 	= "0x00, 0x01, 0x04, 0x08, 0x00, 0xFF,",
                IrisSmall       = "0x00, 0x01, 0x04, 0x0b, 0x00, 0xFF,",
	        IrisLarge       = "0x00, 0x01, 0x04, 0x0b, 0x00, 0xFF,",
	},
}

Protocol.Checksum = function (s)
	return s;
end;


Protocol.CamAddrProcess = function(s, addr)
	local newaddr = math.mod(addr,8);
              s[1] = newaddr + 128;
	return s;
end;

Protocol.SpeedProcess = function(s, arg1, arg2)
                 s[6] = arg1;
                 s[5] = arg2;
                 return s;
end;

--[[Protocol.PositionProcess = function(s, hor, ver, zoom)
	-- 下面只处理快速定位功能
	if s[1] == 0x3a then
		s[4] = bits.band(hor,0xff00)/256;
		s[5] = bits.band(hor, 0xff);
		s[6] = bits.band(ver,0xff00)/256;
		s[7] = bits.band(ver,0xff);
		s[8] = zoom >= 0 and zoom or 0x80 + bits.band(math.abs(zoom), 0xff);
		s[9] = math.mod((s[2] + s[3] + s[4] + s[5] + s[6] + s[7] + s[8]), 256);
		return s;
	end;	
end;
--]]
--[[
下面的函数是可选的，除非有特殊处理过程才打开，没有的话，千万不要打开，否则会造成解析出错
Protocol.MonAddrProcess = function(s, addr)
	return s;
end;

Protocol.SpeedProcess = function(s, arg1, arg2)
	return s;
end;

Protocol.PresetProcess = function(s, arg)
	return s;
end;
--]]


return Protocol;