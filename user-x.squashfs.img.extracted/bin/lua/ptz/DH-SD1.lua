-- 这是大华协议，已经调好，不用更改
local Protocol = {};

-- 表示数值可以用16或10进制(最小值，最大值)
Protocol.Attr = 
{
	-- 协议的显示名称,不能超过16字符，目前暂不支持中文
	Name = "DH-SD1",	
		
	-- 指明是云台协议还是矩阵协议，使用"PTZ", "MATRIX"表示
	Type = "PTZ",
	
	-- 以ms为单位
	Internal = 400,
				
	-- 没有对应的地址范围，请都设成0xff
	-- 云台地址范围
	CamAddrRange 		= {0x01, 0xFF}, 
	-- 监视地址范围
	MonAddrRange		= {0x00, 0xFF},	
	-- 预置点范围
	PresetRange 		= {0x01, 80},
	-- 自动巡航线路范围
	TourRange			= {0x01, 8},
	-- 轨迹线路范围
	PatternRange		= {0x01, 5},
	-- 垂直速度范围
	TileSpeedRange 		= {0x01, 0xFF},
	-- 水平速度范围
	PanSpeedRange 		= {0x01, 0xFF},
	-- 自动扫描范围
	ScanRange 			= {0x01, 5},
	
	-- 辅助范围
	AuxRange 			= {0x01, 0xFF},
}

Protocol.CommandAttr =
{
	-- 协议中需要更改的位置，用LUA下标表示，即下标从１开始,用10进制表示
	AddrPos 		= 2, 
	PresetPos 		= 5, 
	TileSpeedPos 	= 5,
	PanSpeedPos 	= 4,
	AuxPos 			= 5,
}

Protocol.Command = 
{
	-- 写具体协议时只能用16进制或字符表示,没有的话就注释掉
	Start= 
	{
		--写上下左右, 左上，左下，右上，右下
		TileUp 		= "0xA5, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,",
		TileDown 	= "0xA5, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,",
		PanLeft 	= "0xA5, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,", 
		PanRight 	= "0xA5, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,",
		LeftUp 		= "0xA5, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00,",
		LeftDown 	= "0xA5, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,",
		RightUp		= "0xA5, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,",
		RightDown 	= "0xA5, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,",

		ZoomWide 	= "0xA5, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00",
		ZoomTele 	= "0xA5, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00",
		FocusNear	= "0xA5, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00",
		FocusFar 	= "0xA5, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00",
		IrisSmall 	= "0xA5, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00",
		IrisLarge 	= "0xA5, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00",
			
		-- 翻转
		Flip 		= "0xA5, 0x00, 0x87, 0x00, 0x0A, 0x00, 0x00",
		Reset 		= "0xA5, 0x00, 0x87, 0x00, 0x0B, 0x00, 0x00",	
			
		-- 灯光
		--LightOn		= "0xff, 0x01, 0x88, 0x00, 0x00, 0x00, 0x00",
		--LightOff  	= "0xff, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00",
			
		-- 预置点操作（设置，清除，转置)
		SetPreset 	= "0xA5, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00",
		--ClearPreset	= "0xA5, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00",
		ClearPreset	= "0x3f, 0x01, 0x0b, 0x06, 0x00, 0xff",
		GoToPreset 	= "0xA5, 0x00, 0x83, 0x00, 0x00, 0x00, 0x00",			
			
		AutoPanOn		= "0xA5, 0x00, 0x83, 0x01, 0x62, 0x00, 0x00",
		AutoPanOff		= "0xA5, 0x00, 0x83, 0x00, 0x62, 0x00, 0x00",
		
		SetLeftLimit 	= "0xA5, 0x00, 0x81, 0x00, 0x51, 0x00, 0x00",
		SetRightLimit	= "0xA5, 0x00, 0x81, 0x00, 0x52, 0x00, 0x00", 
		AutoScanOn 		= "0xA5, 0x00, 0x83, 0x00, 0x5b, 0x00, 0x00,",
		AutoScanOff		= "0xA5, 0x00, 0x83, 0x00, 0x5a, 0x00, 0x00,",
			
		-- 自动巡航，一般指在预置点之间巡航

		AddTour 		= "0xA5, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00",
		DeleteTour 		= "0xA5, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00",
		StartTour 		= "0xA5, 0x00, 0x83, 0x00, 0x63, 0x00, 0x00",
		StopTour 		= "0xA5, 0x00, 0x83, 0x00, 0x5a, 0x00, 0x00",
		ClearTour		= "0xA5, 0x00, 0x82, 0x00, 0x51, 0x00, 0x00",

			
		-- 轨迹巡航, 一般指模式(设置开始，设置结束，运行，停止，清除模式
		SetPatternStart = "0xA5, 0x00, 0x85, 0x00, 0x01, 0x00, 0x00",
		SetPatternStop 	= "0xA5, 0x00, 0x85, 0x00, 0x02, 0x00, 0x00",
		StartPattern 	= "0xA5, 0x00, 0x85, 0x00, 0x00, 0x00, 0x00",
		StopPattern	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00",
		--ClearPattern 	= "0xff, 0x01, 0x00, 0x1D, 0x00, 0x00, 0x00",
		
		AuxOn 	= "0xA5, 0x00, 0x87, 0x00, 0x00, 0x00, 0x00",
		AuxOff 	= "0xA5, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00",
			
		-- 菜单相关操作
		Menu = "0xA5, 0x00, 0x89, 0x01, 0x00, 0x00, 0x00",
		MenuExit = "0xA5, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00", 
		MenuEnter = "0xA5, 0x00, 0x89, 0x08, 0x00, 0x00, 0x00",
		MenuEsc = "0xA5, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00",
		MenuUp = "0xA5, 0x00, 0x89, 0x04, 0x00, 0x00, 0x00",
		MenuDown = "0xA5, 0x00, 0x89, 0x05, 0x00, 0x00, 0x00",
		MenuLeft = "0xA5, 0x00, 0x89, 0x06, 0x00, 0x00, 0x00",
		MenuRight = "0xA5, 0x00, 0x89, 0x07, 0x00, 0x00, 0x00",
		
		-- 对于特殊的命令，可以自己定义特定信息，利用这个特定信息来处理
		Position = "0x3a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,0x00, 0xff",	
		--PositionAbs = "0x3a, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,0x00, 0xff",	
		--精确定位
		PositionAbs = "0x3F, 0x01, 0x08, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff",	
		-- 持续移动命令
		ContinueStart = "0x3F, 0x01, 0x07, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff",
		
		-- 绝对移动命令
		AbsoluteStart = "0x3F, 0x01, 0x08, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff",
		
		--移动停止命令(包括持续移动和绝对移动停止)
		ContinueStop = "0x3F, 0x01, 0x06, 0x06, 0x00, 0xff",
		AbsoluteStop = "0x3F, 0x01, 0x06, 0x06, 0x00, 0xff",
	},
	Stop = 
	{
		TileUp 		= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00",
		TileDown 	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00",
		PanLeft 	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00",
		PanRight 	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
		LeftUp 		= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
		LeftDown 	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
		RightUp		= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
		RightDown 	= "0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
		
		ZoomWide 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
		ZoomTele 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
		FocusNear 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
		FocusFar 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
		IrisSmall 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
		IrisLarge 	= "0xA5, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,",
	},
}

Protocol.Checksum = function (s)
	if s[1] ~= 0x3a and s[1] ~= 0x3f then
		s[7] = math.mod((s[1] + s[2] + s[3] + s[4] + s[5] + s[6]), 256);
	end;
	return s;
end;


Protocol.CamAddrProcess = function(s, addr)
	local addr = math.mod(addr,256);
	if s[1] ~= 0x3a then
		s[Protocol.CommandAttr.AddrPos] = addr;
	else
		s[2] = addr;
	end;
	return s;
end;

Protocol.SetTourProcess = function(s, tour, preset)
	if s[1] ~= 0x3a and tour >= 1 then
		s[4] = tour - 1;
		s[5] = preset;
	end;
	return s;
end;

Protocol.TourProcess = function(s, tour)
	if s[1] ~= 0x3a and tour >= 1 then
		s[4] = tour - 1;
	end;
	return s;	
end;

Protocol.PatternProcess = function(s, num)
	if s[1] ~= 0x3a and num >= 1 then
		s[4] = num - 1;
	end;
	return s;	
end;

Protocol.PositionProcess = function(s, hor, ver, zoom)
	-- 下面只处理快速定位功能
	local max_pos_zoom = 16;
	if s[1] == 0x3a then
		s[4] = bits.rshift(bits.band(hor,0xff00), 8);
		s[5] = bits.band(hor, 0xff);
		s[6] = bits.rshift(bits.band(ver,0xff00), 8);
		s[7] = bits.band(ver,0xff);
		if zoom == 0 then
			s[8] = 0;
		else 
			if math.abs(zoom) > max_pos_zoom then
				s[8] = max_pos_zoom; 
			else 
				s[8] = math.abs(zoom);
			end;
			s[8] = zoom > 0 and s[8] or 0x80 + s[8];
		end
		s[9] = math.mod((s[2] + s[3] + s[4] + s[5] + s[6] + s[7] + s[8]), 256);
		return s;
	end;	
end;

--[[
云台持续移动
arg1:水平速度
arg2：垂直速度
arg3：ZOOM速度
T：超时时间
--]]
Protocol.ContinueStartProcess = function(s, arg1, arg2, arg3, T)
	--下面只处理持续移动功能		
	if s[1] == 0x3F then
		s[5] = bits.rshift(bits.band(arg1,0xff00), 8);
		s[6] = bits.band(arg1, 0xff);
		s[7] = bits.rshift(bits.band(arg2,0xff00), 8);
		s[8] = bits.band(arg2,0xff);
		s[9] = bits.band(arg3,0xff);
		s[10] = bits.rshift(bits.band(T,0xff00), 8);
		s[11] = bits.band(T, 0xff);

		s[12] = math.mod((s[1]+ s[2] + s[3] + s[4] + s[5] + s[6] + s[7] + s[8] +s[9] +s[10] +s[11]), 256);
	
		return s;
	end;	
end;


--[[
云台绝对移动(ONVIF使用)
arg1:水平速度+水平坐标
arg2：垂直速度+垂直坐标
arg3：ZOOM速度+ZOOM坐标
--]]
Protocol.AbsoluteStartProcess = function(s,arg1, arg2, arg3)
	--下面只处理绝对移动功能
	if s[1] == 0x3F then
		panSpeed = bits.band(arg1,0xffff);
		pan = (arg1 - panSpeed) / (256 * 256);
		
		tilteSpeed = bits.band(arg2,0xffff);
		tilte = (arg2 - tilteSpeed) / (256 * 256);
		
		zoomSpeed = bits.band(arg3,0xffff);
		zoom = (arg3 - zoomSpeed) / (256 * 256);
		
		s[5] = (bits.band(pan, 0xff00)) / 256;
		s[6] = bits.band(pan, 0xff);
		s[7] = (bits.band(panSpeed, 0xff00)) / 256;
		s[8] = bits.band(panSpeed, 0xff);	
		s[9] = (bits.band(tilte, 0xff00)) / 256;
		s[10] = bits.band(tilte, 0xff);
		s[11] = (bits.band(tilteSpeed, 0xff00)) / 256;
		s[12] = bits.band(tilteSpeed, 0xff);
		s[13] = zoom;
		s[14] = zoomSpeed;
		
		s[15] = math.mod((s[1]+ s[2] + s[3] + s[4] + s[5] + s[6] + s[7] + s[8] +s[9] +s[10] +s[11]+ s[12] +s[13] +s[14]), 256);
		return s;
	end;
end;


--[[
云台精确定位
arg1:水平坐标
arg2：垂直坐标
arg3：ZOOM坐标
--]]
Protocol.PositionAbsProcess = function(s,arg1, arg2, arg3, T)
	--下面只处理精确定位功能

	if T == nil then
		T = 0;
		PTZSpeed = 0;
	end;
	if T <= 8 and T >= 1 then
		PTZSpeed = T*32 - 1;
	else
		PTZSpeed = 0;
		T = 0;
	end;
	if s[1] == 0x3F then
		s[5] = bits.rshift(bits.band(arg1,0xff00), 8);
		s[6] = bits.band(arg1,0xff);
		s[7] = bits.rshift(bits.band(PTZSpeed,0xff00), 8);
		s[8] = bits.band(PTZSpeed,0xff);
		s[9] = bits.rshift(bits.band(arg2,0xff00), 8);
		s[10] = bits.band(arg2,0xff);
		s[11] = bits.rshift(bits.band(PTZSpeed,0xff00), 8);
		s[12] = bits.band(PTZSpeed,0xff);
		s[13] = bits.band(arg3,0xff);
		s[14] = bits.band(T,0xff);
	
		s[15] = math.mod((s[1]+ s[2] + s[3] + s[4] + s[5] + s[6] + s[7] + s[8] +s[9] +s[10] +s[11]+ s[12] +s[13] +s[14]), 256);		
		return s;
	end;
end;

--[[
设置线扫左边界
左极限为81,83,85,87,89
--]]
Protocol.SetLeftLimitProcess = function(s,arg1)
	if arg1 == nil then
		arg1 = 0;
	end;
	if s[1] == 0xA5 then
		arg1 = (arg1 * 2) + 81;
		s[5] = bits.band(arg1,0xff);
		return s;
	end;
end;

--[[
设置线扫右边界
右极限为82,84,86,88,90
--]]
Protocol.SetRightLimitProcess = function(s,arg1)
	if arg1 == nil then
		arg1 = 0;
	end;
	if s[1] == 0xA5 then
		arg1 = (arg1 * 2) + 82;
		s[5] = bits.band(arg1,0xff);
		return s;
	end;
end;

--[[
开始自动线扫
91 ~ 95
--]]
Protocol.AutoScanOnProcess = function(s,arg1)
	if arg1 == nil then
		arg1 = 0;
	end;
	if s[1] == 0xA5 then
		arg1 = arg1 + 91;
		s[5] = bits.band(arg1,0xff);
		return s;
	end;
end;

--[[
云台停止移动
style:停止类型，1、停止水平/垂直 2、停止Zoom 3、停止水平/垂直/ZOOM
--]]
Protocol.StopProcess = function(s, arg1)
	--下面只处理云台停止移动功能（包括持续移动和绝对移动停止）
	if s[1] == 0x3F then
		s[5] = arg1;
		s[6] = math.mod((s[1] +s[2] +s[3] +s[4] +s[5]),256);
		return s;
	end;
end;



--[[
下面的函数是可选的，除非有特殊处理过程才打开，没有的话，千万不要打开，否则会造成解析出错
Protocol.MonAddrProcess = function(s, addr)
	return s;
end;

Protocol.SpeedProcess = function(s, arg1, arg2)
	return s;
end;
--]]


Protocol.PresetProcess = function(s, arg)
--删除预置点指令作特殊处理，添加和调用预置点命令正常处理
	if s[1] == 0x3F then
		s[5] = bits.band(arg,0xff);
		s[6] = math.mod((s[1] +s[2] +s[3] +s[4] +s[5]),256);	
		return s;
	else
		s[Protocol.CommandAttr.PresetPos] = math.abs(arg);
		return s;
	end;	
end;


return Protocol;